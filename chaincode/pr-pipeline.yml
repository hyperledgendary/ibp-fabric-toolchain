---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ibp-fabric-pr-pipeline
spec:
  params:
    - name: repository
      description: the git repo containing source code. If empty, the repository url will be found from toolchain
      default: ""
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""

    - name: pipeline-debug
      default: "0"
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: extract-repository-url
      taskRef:
        name: toolchain-extract-value
      params:
        - name: expression
          # if a params.repository is given, it takes precedence
          value: '. as $toolchain | ["$(params.repository)"] | if .[0]=="" then $toolchain | .services[] | select(.toolchain_binding.name=="repo") | .dashboard_url else .[0] end'
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    # Clone the repo that contains the Chaincode/Smart Contract that should be deployed
    - name: git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: pipeline-git-event-content-inspect
      runAfter:
        - git-clone
      taskRef:
        name: inspect-git-content
      workspaces:
        - name: workspace
          workspace: pipeline-ws

    # Build and Unit test the chaincode
    - name: pipeline-build-task
      taskRef:
        name: build-task
      runAfter:
        - pipeline-git-event-content-inspect
      workspaces:
        - name: code
          workspace:  pipeline-ws 

    - name: pipeline-test-task
      taskRef:
        name: build-task
      runAfter:
        - pipeline-git-event-content-inspect
      workspaces:
        - name: code
          workspace:  pipeline-ws

